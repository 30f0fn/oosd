package edu.umb.cs680.hw06;

import java.time.LocalDateTime;
import java.util.LinkedList;


public class Directory extends FSElement {

    private LinkedList<FSElement> children;
    private LinkedList<Directory> childDirectories;
    private LinkedList<File> childFiles;
    private LinkedList<Link> childLinks;

    public Directory(Directory parent,
                      String name,
                      LocalDateTime creationTime) {
        // why not get creationTime as time of constructor call?
        // creationTime = LocalDateTime.now();
        super(parent, name, 0, creationTime);
        children = new LinkedList<FSElement>();
        childDirectories = new LinkedList<Directory>();
        childFiles = new LinkedList<File>();
        childLinks = new LinkedList<Link>();
        if (parent != null) {
            parent.appendChild(this);
        } else {
            FileSystem fs = FileSystem.getFileSystem();
            fs.addRootDirectory(this);
        }

    }; 

    public LinkedList<FSElement> getChildren() {
        return this.children;
    }

    private void appendChild(Directory child) {
        this.childDirectories.add(child);
        this.children.add(child);
    }

    public void appendChild(File child) {
        this.childFiles.add(child);
        this.children.add(child);
    }

    public void appendChild(Link child) {
        this.childLinks.add(child);
        this.children.add(child);
    }


    public Integer countChildren() {
        return this.children.size();
    }

    public LinkedList<Directory> getSubDirectories() {
        return this.childDirectories;
    }

    public LinkedList<File> getFiles() {
        return this.childFiles;
    }

    public Integer getTotalSize() {
        int fileSum = getFiles().stream().mapToInt(f->f.getSize()).sum();
        int dirSum = getSubDirectories().stream().mapToInt(d->d.getTotalSize()).sum();
        return fileSum + dirSum + this.getSize();
    }

    public Boolean isDirectory() {
        return true;
    }

    public Boolean isFile() {
        return false;
    }

    public static void main(String args[]) {
        // System.out.printf("%s",
                          // getName());
    }
}

