package edu.umb.cs680.hw07;

import java.util.LinkedList;
import java.time.LocalDateTime;

public abstract class FileSystem {

    private String name;
    private Integer capacity;
    private Integer id;
    private FSElement defaultRoot;

    // only protected not private because can't subclass with private constructor
    protected FileSystem() {} 

    public FSElement initFileSystem(String name,
                                    Integer capacity){
        this.name = name;
        this.capacity = capacity;
        FSElement root = createDefaultRoot();
        if (root.isDirectory() && capacity > root.getSize()) {
            setRoot(root);
            this.id = root.hashCode();
            return root;
        } else {
            throw new RuntimeException("directory too big to add as root");
        }
    }

    protected FSElement createDefaultRoot() {
        FSElement root = new FSElement(null, "root", LocalDateTime.now());
        setRoot(root);
    }

    private void setRoot(FSElement root) {
        this.defaultRoot = root;
    }

    protected void getDefaultRoot() {
        return this.defaultRoot;
    }


    public int getCapacity() {
        return this.capacity;
    }

    public String getName() {
        return this.name;
    }

    public int getUsed() {
        return this.defaultRoot.getSize();
    }
    public static void main(String args[]) {
    }

}
